package com.demo.common.model;

import com.demo.common.model.base.BaseWares;
import com.jfinal.plugin.activerecord.Page;
import com.mysql.jdbc.StringUtils;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Wares extends BaseWares<Wares> {
	public static final Wares dao = new Wares();

	
	/**
	 * 查汽贸
	 * @param pageNum
	 * @param pageSize
	 * @param para
	 * @param para2
	 * @param para3
	 * @return
	 */
	public Page<Wares> getQMpage(int pageNum, int pageSize,String typeQM, String conmentQM, String brand, String orderCondQM) {
		if (pageNum < 1) {
			pageNum = 1;
		}

		StringBuilder sql = new StringBuilder();
		sql.append(" from t_wares where type = 'qm' ");
		if (!StringUtils.isEmptyOrWhitespaceOnly(typeQM)) {
			sql.append(" and startadd like '%" + typeQM + "%'");
		}
		if (!StringUtils.isEmptyOrWhitespaceOnly(conmentQM)) {
			sql.append(" and sname like '%" + conmentQM + "%'");
		}
		if (!StringUtils.isEmptyOrWhitespaceOnly(orderCondQM)) {
			sql.append(" order by "+orderCondQM+"");
		}
		if (!StringUtils.isEmptyOrWhitespaceOnly(brand)) {
			sql.append(" order by "+brand+"");
		}
		Page<Wares> page = Wares.dao.paginate(pageNum, pageSize, "select *", sql.toString());
		int totalPage = page.getTotalPage();
		if (totalPage < 1) {
			totalPage = 1;
		}
		if (pageNum > totalPage) {
			pageNum = totalPage;
		}

		return page;
	}
/**
 *  查二手车 
 * @param pageNum
 * @param pageSize
 * @param typeES
 * @param commentES
 * @param orderCondES
 * @return
 */

	public Page<Wares> getESpage(int pageNum, int pageSize, String typeES, String conmentES, String orderCondES,String brand) {
		if (pageNum < 1) {
			pageNum = 1;
		}

		StringBuilder sql = new StringBuilder();
		sql.append(" from t_wares where type = 'es' ");
		if (!StringUtils.isEmptyOrWhitespaceOnly(typeES)) {
			sql.append(" and startadd like '%" + typeES + "%'");
		}
		if (!StringUtils.isEmptyOrWhitespaceOnly(conmentES)) {
			sql.append(" and sname like '%" + conmentES + "%'");
		}
		if (!StringUtils.isEmptyOrWhitespaceOnly(orderCondES)) {
			sql.append(" order by "+orderCondES+"");
		}
		if (!StringUtils.isEmptyOrWhitespaceOnly(brand)) {
			sql.append(" order by "+brand+"");
		}
		Page<Wares> page = Wares.dao.paginate(pageNum, pageSize, "select *", sql.toString());
		int totalPage = page.getTotalPage();
		if (totalPage < 1) {
			totalPage = 1;
		}
		if (pageNum > totalPage) {
			pageNum = totalPage;
		}

		return page;
	}
    public Page<Wares> getFWpage(int pageNum, int pageSize, String typeFW, String commentFW, String orderCondFW, String orderCondFL) {
    	if (pageNum < 1) {
			pageNum = 1;
		}

		StringBuilder sql = new StringBuilder();
		sql.append(" from t_wares where type = 'fw' ");
		if (!StringUtils.isEmptyOrWhitespaceOnly(orderCondFL)) {
			sql.append(" and fwtype = '" + orderCondFL + "'");
		}
		if (!StringUtils.isEmptyOrWhitespaceOnly(typeFW)) {
			sql.append(" and startadd like '%" + typeFW + "%'");
		}
		if (!StringUtils.isEmptyOrWhitespaceOnly(typeFW)) {
			sql.append(" and sname like '%" + commentFW + "%'");
		}
		if (!StringUtils.isEmptyOrWhitespaceOnly(orderCondFW)) {
			sql.append(" order by "+orderCondFW+"");
		}
		Page<Wares> page = Wares.dao.paginate(pageNum, pageSize, "select *", sql.toString());
		int totalPage = page.getTotalPage();
		if (totalPage < 1) {
			totalPage = 1;
		}
		if (pageNum > totalPage) {
			pageNum = totalPage;
		}

		return page;
}
	public Page<Wares> getStoreAllpage2(int pageNum, int pageSize, String content) {
		if (pageNum < 1) {
			pageNum = 1;
		}

		StringBuilder sql = new StringBuilder();
		sql.append(" from t_wares where ");
		if (!StringUtils.isEmptyOrWhitespaceOnly(content)) {
			sql.append("   sname  like '%" + content + "%' ");
		}
		
		Page<Wares> page = Wares.dao.paginate(pageNum, pageSize, "select *", sql.toString());
		int totalPage = page.getTotalPage();
		if (totalPage < 1) {
			totalPage = 1;
		}
		if (pageNum > totalPage) {
			pageNum = totalPage;
		}

		return page;
	}
}
