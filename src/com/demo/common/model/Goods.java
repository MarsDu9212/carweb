package com.demo.common.model;

import com.demo.common.model.base.BaseGoods;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Page;
import com.jfinal.plugin.activerecord.Record;
import com.mysql.jdbc.StringUtils;

/**
 * Generated by JFinal.
 * Blog model.
 * 数据库字段名建议使用驼峰命名规则，便于与 java 代码保持一致，如字段名： userId
 */
@SuppressWarnings("serial")
public class Goods extends BaseGoods<Goods> {
	
	public static final Goods dao = new Goods();
	
	/**
	 * 所有 sql 与业务逻辑写在 Model 或 Service 中，不要写在 Controller 中，养成好习惯，有利于大型项目的开发与维护
	 * @param orderCond 
	 */
	
	/**
	 * 搜索商品
	 * @param pageNum
	 * @param pageSize
	 * @param para
	 * @param para2
	 * @return
	 * @author 杜腾飞
	 * 		2016年6月13日11:39:49
	 */
	public Page<Goods> searchGoodsPage(int pageNum, int pageSize, String content, String orderCond) {
		if (pageNum < 1) {
			pageNum = 1;
		}

		StringBuilder sql = new StringBuilder();
		sql.append(" from t_goods g,t_store s where g.storeid=s.storeid ");
		if (!StringUtils.isEmptyOrWhitespaceOnly(content)) {
			sql.append(" and gname like '%" + content + "%'");
		}
//		if (!StringUtils.isEmptyOrWhitespaceOnly(orderCond)) {
//			sql.append(" order by "+orderCond+"");
//		}
		Page<Goods> page = Goods.dao.paginate(pageNum, pageSize, "select *", sql.toString());
		int totalPage = page.getTotalPage();
		if (totalPage < 1) {
			totalPage = 1;
		}
		if (pageNum > totalPage) {
			pageNum = totalPage;
		}

		return page;
	}
	
	/**
	 * 找轮胎
	 * @param pageNum
	 * @param pageSize
	 * @param type
	 * @param content
	 * @param orderCond
	 * @param brand 
	 * @return
	 */
	public Page<Record> getGoodsLTpage(int pageNum, int pageSize, String type, String content, String orderCond, String brand) {
		if (pageNum < 1) {
			pageNum = 1;
		}

		StringBuilder sql = new StringBuilder();
		sql.append(" from t_goods g left join t_tuijian k  on k.goodid=g.goodid  where g.gtype = 'carLT' ");
		if (!StringUtils.isEmptyOrWhitespaceOnly(type)) {
			sql.append(" and startadd like '%" + type + "%'");
		}
		if (!StringUtils.isEmptyOrWhitespaceOnly(content)) {
			sql.append(" and gname like '%" + content + "%'");
		}
		if (!StringUtils.isEmptyOrWhitespaceOnly(brand)) {
			sql.append(" and gbrand like '%" + brand + "%'");
		}
		if (!StringUtils.isEmptyOrWhitespaceOnly(orderCond)) {
			sql.append(" order by "+orderCond+"");
		}
		sql.append(" order by k.money desc");
		Page<Record> page = Db.paginate(pageNum, pageSize, "select g.*", sql.toString());
		int totalPage = page.getTotalPage();
		if (totalPage < 1) {
			totalPage = 1;
		}
		if (pageNum > totalPage) {
			pageNum = totalPage;
		}

		return page;
	}
	
	/**
	 * 找机油
	 * @param pageNum
	 * @param pageSize
	 * @param brand 
	 * @param para
	 * @param come
	 * @param comeNb
	 * @return
	 */
	public Page<Goods> getGoodsJYpage(int pageNum, int pageSize, String typeJY, String conmentJY, String orderCondJY, String brand) {
		if (pageNum < 1) {
			pageNum = 1;
		}

		StringBuilder sql = new StringBuilder();
		sql.append(" from t_goods g left join t_tuijian k  on k.goodid=g.goodid  where g.gtype = 'carJY' ");
		if (!StringUtils.isEmptyOrWhitespaceOnly(typeJY)) {
			sql.append(" and startadd like '%" + typeJY + "%'");
		}
		if (!StringUtils.isEmptyOrWhitespaceOnly(conmentJY)) {
			sql.append(" and gname like '%" + conmentJY + "%'");
		}
		if (!StringUtils.isEmptyOrWhitespaceOnly(brand)) {
			sql.append(" and gbrand like '%" + brand + "%'");
		}
		if (!StringUtils.isEmptyOrWhitespaceOnly(orderCondJY)) {
			sql.append(" order by "+orderCondJY+"");
		}
		sql.append(" order by k.money desc");
		Page<Goods> page = Goods.dao.paginate(pageNum, pageSize, "select g.*", sql.toString());
		int totalPage = page.getTotalPage();
		if (totalPage < 1) {
			totalPage = 1;
		}
		if (pageNum > totalPage) {
			pageNum = totalPage;
		}

		return page;
	}
    /**
     * 找配件
     * @param pageNum
     * @param pageSize
     * @param brand 
     * @param para
     * @param para2
     * @param para3
     * @return
     */
	public Page<Goods> getGoodsPJpage(int pageNum, int pageSize, String typePJ, String conmentPJ, String orderCondPJ, String brand) {
		if (pageNum < 1) {
			pageNum = 1;
		}

		StringBuilder sql = new StringBuilder();
		sql.append(" from t_goods g left join t_tuijian k  on k.goodid=g.goodid  where g.gtype = 'carPJ' ");
		if (!StringUtils.isEmptyOrWhitespaceOnly(typePJ)) {
			sql.append(" and startadd like '%" + typePJ + "%'");
		}
		if (!StringUtils.isEmptyOrWhitespaceOnly(conmentPJ)) {
			sql.append(" and gname like '%" + conmentPJ + "%'");
		}
		if (!StringUtils.isEmptyOrWhitespaceOnly(brand)) {
			sql.append(" and gbrand like '%" + brand + "%'");
		}
		if (!StringUtils.isEmptyOrWhitespaceOnly(orderCondPJ)) {
			sql.append(" order by "+orderCondPJ+"");
		}
		sql.append(" order by k.money desc");
		Page<Goods> page = Goods.dao.paginate(pageNum, pageSize, "select g.*", sql.toString());
		int totalPage = page.getTotalPage();
		if (totalPage < 1) {
			totalPage = 1;
		}
		if (pageNum > totalPage) {
			pageNum = totalPage;
		}

		return page;
	}
}


