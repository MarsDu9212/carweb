package com.demo.common.model;

import com.demo.common.model.base.BaseService;
import com.jfinal.plugin.activerecord.Page;
import com.mysql.jdbc.StringUtils;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Service extends BaseService<Service> {
	public static final Service dao = new Service();
    /**
     * 智能查询
     * @param pageNum
     * @param pageSize
     * @return
     */
	public Page<Service> getServicePaginate(int pageNum, int pageSize) {
		if (pageNum < 1) {
			pageNum = 1;
		}

		StringBuilder sql = new StringBuilder();
		sql.append(" from t_service where 1=1 ");
		Page<Service> page = Service.dao.paginate(pageNum, pageSize, "select *", sql.toString());
		int totalPage = page.getTotalPage();
		if (totalPage < 1) {
			totalPage = 1;
		}
		if (pageNum > totalPage) {
			pageNum = totalPage;
		}

		return page;
	}
	/**
	 * 信誉查询
	 * @param pageNum
	 * @param pageSize
	 * @return
	 */
	public Page<Service> getService2Paginate(int pageNum, int pageSize) {
		if (pageNum < 1) {
			pageNum = 1;
		}

		StringBuilder sql = new StringBuilder();
		sql.append(" from t_service where 1=1 ");
		Page<Service> page = Service.dao.paginate(pageNum, pageSize, "select *", sql.toString());
		int totalPage = page.getTotalPage();
		if (totalPage < 1) {
			totalPage = 1;
		}
		if (pageNum > totalPage) {
			pageNum = totalPage;
		}

		return page;
	}
	/**
	 *  查公估--智能
	 * @param pageNum
	 * @param pageSize
	 * @param type
	 * @return
	 */
	
	public Page<Service> getGGLTpage(int pageNumber, int pageSize) {
		if (pageNumber < 1) {
			pageNumber = 1;
		}

		StringBuilder sql = new StringBuilder();
		sql.append(" from t_service  where type = 'gg' ");
		Page<Service> page = Service.dao.paginate(pageNumber, pageSize, "select *", sql.toString());
		int totalPage = page.getTotalPage();
		if (totalPage < 1) {
			totalPage = 1;
		}
		if (pageNumber > totalPage) {
			pageNumber = totalPage;
		}

		return page;
	}
	/**
	 * 查公估--信誉度
	 * @param pageNum
	 * @param pageSize
	 * @param para
	 * @return
	 */
	public Page<Service> getXLLTpage(int pageNumber, int pageSize) {
		if (pageNumber < 1) {
			pageNumber = 1;
		}

		StringBuilder sql = new StringBuilder();
		sql.append(" from t_service  where type = 'gg'  order by slv desc ");
		Page<Service> page = Service.dao.paginate(pageNumber, pageSize, "select *", sql.toString());
		int totalPage = page.getTotalPage();
		if (totalPage < 1) {
			totalPage = 1;
		}
		if (pageNumber > totalPage) {
			pageNumber = totalPage;
		}

		return page;
	}
	/**
	 * 查保险 --智能
	 * @param pageNum
	 * @param pageSize
	 * @param para
	 * @return
	 */
	public Page<Service> getBXZpage(int pageNumber, int pageSize) {
		if (pageNumber < 1) {
			pageNumber = 1;
		}

		StringBuilder sql = new StringBuilder();
		sql.append(" from t_service  where type = 'dm' ");
		Page<Service> page = Service.dao.paginate(pageNumber, pageSize, "select *", sql.toString());
		int totalPage = page.getTotalPage();
		if (totalPage < 1) {
			totalPage = 1;
		}
		if (pageNumber > totalPage) {
			pageNumber = totalPage;
		}

		return page;
	}
	/**
	 * 查保险 --信誉度
	 * @param pageNum
	 * @param pageSize
	 * @param para
	 * @return
	 */
	public Page<Service> getBXXpage(int pageNumber, int pageSize) {
		if (pageNumber < 1) {
			pageNumber = 1;
		}

		StringBuilder sql = new StringBuilder();
		sql.append(" from t_service  where type = 'dm'  order by slv desc ");
		Page<Service> page = Service.dao.paginate(pageNumber, pageSize, "select *", sql.toString());
		int totalPage = page.getTotalPage();
		if (totalPage < 1) {
			totalPage = 1;
		}
		if (pageNumber > totalPage) {
			pageNumber = totalPage;
		}

		return page;
	}
	public Page<Service> getStoreAllpage1(int pageNumber, int pageSize, String content) {
		if (pageNumber < 1) {
			pageNumber = 1;
		}

		StringBuffer sql = new StringBuffer();
		sql.append(" from t_service where ");
		
		if (!StringUtils.isEmptyOrWhitespaceOnly(content)) {
			sql.append("  sname like '%" + content + "%'");
		}
		

		Page<Service> page = Service.dao.paginate(pageNumber, pageSize, "select *", sql.toString());
		int totalPage = page.getTotalPage();
		if (totalPage < 1) {
			totalPage = 1;
		}
		if (pageNumber > totalPage) {
			pageNumber = totalPage;
		}

		return page;
	}


}
